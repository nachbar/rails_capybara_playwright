#!/bin/bash
# script to start the vnc server with a password

# see the instructions below to create the password file.

# If you then want to stop the vnc server, or restart with a password,
# merely kill the Xvfb and x11vnc processes and then you can
# restart with either script



# This script, to start the vnc server with a password, will fail if the password file is not present first.
# --- Check for the VNC password file ---
VNC_PASSWD_FILE="$HOME/.vnc/passwd" # Use $HOME for reliability, equivalent to ~

if [ ! -f "$VNC_PASSWD_FILE" ]; then
  # The file does NOT exist (-f checks for a regular file)
  echo "Error: Required VNC password file not found at '$VNC_PASSWD_FILE'." >&2 # Print error to stderr
  echo "Please create it first (e.g., using the 'x11vnc -storepasswd' command)." >&2
  exit 1 # Exit with a non-zero status code (indicating failure)
fi
# --- End of check ---

# If the script reaches here, the file exists.
echo "VNC password file found. Continuing..."

# Start Xvfb on display :1 with a resolution (e.g., 1280x1024)
# The '&' runs it in the background
Xvfb :1 -screen 0 1280x1024x24 &

# Give Xvfb a moment to start
sleep 2

# Start the window manager (optional, but recommended)
DISPLAY=:1 fluxbox &

# Start x11vnc, attaching to display :1, no password, listen on all interfaces
# -forever keeps it running even after the first client disconnects
# -nopw disables password prompting (acceptable for local devcontainer)
# -xkb helps with keyboard mapping
# -display :1 connects it to the Xvfb screen

# BUT, it still connects to port 5900, apparently a default.  So, set the port explicitly
# x11vnc -display :1 -nopw -forever -xkb &
# x11vnc -display :1 -rfbport 5901 -nopw -forever -xkb -listen 0.0.0.0 &

# To use the password file, start x11vnc without -nopw but rather -usepw.
# if the password file is not present, it will prompt you to create one, which will be in ~/.vnc/passwd
# BUT, that doesn't work well if the x11vnc is started in the background.
# best is to use:
# x11vnc -storepasswd
# to create the ~/.vnc/passwd file first, then run this script
x11vnc -display :1 -rfbport 5901 -usepw -forever -xkb -listen 0.0.0.0 &

# You MUST run rspec with DISPLAY=:1 to connect to the Xvfb display
# Otherwise, it will try to connect to the default display :0, which is not running
# rspec will fail, with playwright telling you that you do not have an X display running
echo "VNC Server Started on display :1. Connect using vnc://localhost:5901"
echo "Run tests in another terminal using: DISPLAY=:1 bundle exec rspec ..."

